///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TAU_Selenium_WebDriver
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WebsiteValidationAndFunctions recording.
    /// </summary>
    [TestModule("b226d0e2-7b1a-424d-9580-d9f642d01204", ModuleType.Recording, 1)]
    public partial class WebsiteValidationAndFunctions : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TAU_Selenium_WebDriverRepository repository.
        /// </summary>
        public static TAU_Selenium_WebDriverRepository repo = TAU_Selenium_WebDriverRepository.Instance;

        static WebsiteValidationAndFunctions instance = new WebsiteValidationAndFunctions();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WebsiteValidationAndFunctions()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WebsiteValidationAndFunctions Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://bioptron-gdansk.pl/' with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("http://bioptron-gdansk.pl/", "Chrome", "", false, false, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='img') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUplInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUplInfo, "TagName", "img");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Src='http://bioptron-gdansk.pl/wp-content/uploads/2018/02/1-593b3097.jpg') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUplInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUplInfo, "Src", "http://bioptron-gdansk.pl/wp-content/uploads/2018/02/1-593b3097.jpg");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Width='190') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUplInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUplInfo, "Width", "190");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='attachment-full size-full') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, "Class", "attachment-full size-full");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='img') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, "TagName", "img");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Src='http://bioptron-gdansk.pl/wp-content/uploads/2018/02/2-34287b03.jpg') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, "Src", "http://bioptron-gdansk.pl/wp-content/uploads/2018/02/2-34287b03.jpg");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=190,Height=200}) on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, new RecordItemIndex(11));
            Validate.ContainsImage(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info, HttpBioptronGdanskPlWpContentUpl1_Screenshot1, HttpBioptronGdanskPlWpContentUpl1_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Bioptron MedoLight') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.BioptronMedoLight'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.BioptronMedoLightInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.BioptronMedoLightInfo, "InnerText", "Bioptron MedoLight");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Href='http://bioptron-gdansk.pl/?page_id=22') on item 'BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.BioptronMedoLight'.", repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.BioptronMedoLightInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.BioptronMedoLightInfo, "Href", "http://bioptron-gdansk.pl/?page_id=22");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage HttpBioptronGdanskPlWpContentUpl1_Screenshot1
        { get { return repo.BioptronZepterGdanskBioptronZepter.ElementorSectionWrap.HttpBioptronGdanskPlWpContentUpl1Info.GetScreenshot1(new Rectangle(0, 0, 190, 200)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions HttpBioptronGdanskPlWpContentUpl1_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
