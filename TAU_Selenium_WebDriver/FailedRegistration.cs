///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TAU_Selenium_WebDriver
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FailedRegistration recording.
    /// </summary>
    [TestModule("e7dfe7d8-baea-4e5b-88a6-c067343d4633", ModuleType.Recording, 1)]
    public partial class FailedRegistration : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TAU_Selenium_WebDriverRepository repository.
        /// </summary>
        public static TAU_Selenium_WebDriverRepository repo = TAU_Selenium_WebDriverRepository.Instance;

        static FailedRegistration instance = new FailedRegistration();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FailedRegistration()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FailedRegistration Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://automationpractice.com/index.php?controller=authentication&back=my-account' with browser 'Chromium' in maximized mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("http://automationpractice.com/index.php?controller=authentication&back=my-account", "Chromium", "", true, true, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginMyStore.EmailCreate' at 56;13.", repo.LoginMyStore.EmailCreateInfo, new RecordItemIndex(2));
            repo.LoginMyStore.EmailCreate.Click("56;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'fkmdjfkm' with focus on 'LoginMyStore.EmailCreate'.", repo.LoginMyStore.EmailCreateInfo, new RecordItemIndex(3));
            repo.LoginMyStore.EmailCreate.PressKeys("fkmdjfkm");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '@{LShiftKey up}sdf.pl' with focus on 'LoginMyStore.EmailCreate'.", repo.LoginMyStore.EmailCreateInfo, new RecordItemIndex(4));
            repo.LoginMyStore.EmailCreate.PressKeys("@{LShiftKey up}sdf.pl");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginMyStore.SpanTagCreateAnAccount' at 87;24.", repo.LoginMyStore.SpanTagCreateAnAccountInfo, new RecordItemIndex(5));
            repo.LoginMyStore.SpanTagCreateAnAccount.Click("87;24");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginMyStore.ColumnsContainer' at 158;566.", repo.LoginMyStore.ColumnsContainerInfo, new RecordItemIndex(6));
            repo.LoginMyStore.ColumnsContainer.Click("158;566");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}' with focus on 'LoginMyStore'.", repo.LoginMyStore.SelfInfo, new RecordItemIndex(7));
            repo.LoginMyStore.Self.EnsureVisible();
            Keyboard.Press("{End}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginMyStore.Register' at 52;24.", repo.LoginMyStore.RegisterInfo, new RecordItemIndex(8));
            repo.LoginMyStore.Register.Click("52;24");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='There are 8 errors') on item 'LoginMyStore.ThereAre8Errors'.", repo.LoginMyStore.ThereAre8ErrorsInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.LoginMyStore.ThereAre8ErrorsInfo, "InnerText", "There are 8 errors");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'LoginMyStore.AlertAlertDanger'.", repo.LoginMyStore.AlertAlertDangerInfo, new RecordItemIndex(10));
            Validate.Exists(repo.LoginMyStore.AlertAlertDangerInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'LoginMyStore'.", repo.LoginMyStore.SelfInfo, new RecordItemIndex(11));
            Host.Current.CloseApplication(repo.LoginMyStore.Self, new Duration(0));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
